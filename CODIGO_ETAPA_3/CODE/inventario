using System;
using System.IO;
using System.Management;

class Inventario
{
    static void Main()
    {
        Console.WriteLine("Escolha uma opção de inventário:");
        Console.WriteLine("1. Inventário de Hardware");
        Console.WriteLine("2. Inventário de Software");
        Console.WriteLine("3. Inventário de Hardware e Software");
        string opcao = Console.ReadLine();

        string arquivoDestino = @"C:\Caminho\para\salvar\inventario.dat"; // Defina o caminho para salvar o arquivo .dat

        switch (opcao)
        {
            case "1":
                InventarioHardware(arquivoDestino);
                break;
            case "2":
                InventarioSoftware(arquivoDestino);
                break;
            case "3":
                InventarioHardware(arquivoDestino);
                InventarioSoftware(arquivoDestino);
                break;
            default:
                Console.WriteLine("Opção inválida.");
                break;
        }
    }

    // Método para inventário de hardware
    static void InventarioHardware(string arquivo)
    {
        try
        {
            using (StreamWriter writer = new StreamWriter(arquivo, false))
            {
                writer.WriteLine("Inventário de Hardware:");
                writer.WriteLine("-----------------------------------");

                // Exemplo: Informações sobre o processador
                var searcher = new ManagementObjectSearcher("SELECT * FROM Win32_Processor");
                foreach (ManagementObject queryObj in searcher.Get())
                {
                    writer.WriteLine($"Processador: {queryObj["Name"]}");
                }

                // Exemplo: Informações sobre a memória RAM
                searcher = new ManagementObjectSearcher("SELECT * FROM Win32_PhysicalMemory");
                foreach (ManagementObject queryObj in searcher.Get())
                {
                    writer.WriteLine($"Memória RAM: {queryObj["Capacity"]} bytes");
                }

                // Adicione mais hardware aqui conforme necessário (disco rígido, placa de vídeo, etc.)
                writer.WriteLine("-----------------------------------");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Erro ao obter inventário de hardware: " + ex.Message);
        }
    }

    // Método para inventário de software
    static void InventarioSoftware(string arquivo)
    {
        try
        {
            using (StreamWriter writer = new StreamWriter(arquivo, true)) // Adiciona ao arquivo existente
            {
                writer.WriteLine("Inventário de Software:");
                writer.WriteLine("-----------------------------------");

                // Exemplo: Informações sobre os programas instalados
                var searcher = new ManagementObjectSearcher("SELECT * FROM Win32_Product");
                foreach (ManagementObject queryObj in searcher.Get())
                {
                    writer.WriteLine($"Software: {queryObj["Name"]}, Versão: {queryObj["Version"]}");
                }

                writer.WriteLine("-----------------------------------");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Erro ao obter inventário de software: " + ex.Message);
        }
    }
}
